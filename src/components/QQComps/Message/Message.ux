<import
  name="better-online-image"
  src="@components/BetterOnlineImage/BetterOnlineImage.ux"
></import>

<template>
    <div class="base">
        <div class="message {{isSelf() ? 'self-message' : ''}}" if="{{msg.message.length}}">
            <!-- 对方 -->
            <div if="{{!isSelf()}}" class="sender-info">
                <div if="{{shouldShowRoleBar(msg.sender.role)}}" class="sender-rolebar" style="background-color: {{getSenderRoleBarBgColor(msg.sender.role)}}">
                    <text class="sender-bar-text" style="color: {{getSenderRoleBarTextColor(msg.sender.role)}}">{{getSenderRoleBarText(msg.sender.role)}}</text>
                </div>
                <text class="sender-nickname">{{msg.sender.nickname}}</text>
            </div>
            <!-- 我方 -->
            <div if="{{isSelf()}}" class="sender-info self-ver">
                <text class="sender-nickname self-nickname">{{msg.sender.nickname}}</text>
                <div if="{{shouldShowRoleBar(msg.sender.role)}}" class="sender-rolebar self-rolebar" style="background-color: {{getSenderRoleBarBgColor(msg.sender.role)}}">
                    <text class="sender-bar-text" style="color: {{getSenderRoleBarTextColor(msg.sender.role)}}">{{getSenderRoleBarText(msg.sender.role)}}</text>
                </div>
            </div>
            <div class="box {{isSelf() ? 'self-box' : ''}}">
            <div if="{{reply_name}}" class="reply-box">
              <div style="flex-direction: row;justify-content:space-between">
                <text class="reply-1">{{reply_name}}</text>
                <text class="reply-1" style="flex-shrink: 0;">{{reply_time}}</text>
              </div>
              <text class="reply-msg">{{reply_msg}}</text>
            </div>
            <div for="{{msg.message}}">
                <text if="{{$item.type === 'text'}}" style="font-size: 32px; font-weight: 500; {{isSelf() ? 'text-align: right' : ''}}">{{$item.data.text}}</text>
                <text elif="{{$item.type === 'at'}}">@{{$item.data.qq}}</text>
                <div elif="{{$item.type === 'image'}}" style="min-height: 250px">
                    <better-online-image
                        max-height="250px"
                        src="{{$item.data.url}}"
                        border-radius="36px"
                        cache-time="86400000"
                    >
                    </better-online-image>
                </div>
                <img elif="{{$item.type === 'face'}}" src="/common/face/{{$item.data.id}}.png" style="width:48px;height:48px"></img>
                <text elif="{{$item.type === 'record'}}">[语音]</text>
                <text elif="{{$item.type === 'file'}}">[文件 {{$item.data.file}}]</text>
                <div elif="{{$item.type === 'forward'}}" style="display: flex;flex-direction: column;">
                    <text>合并转发</text>
                    <text class="reply-1" >{{getPreview($item.data.content[0])}}</text>
                    <text class="reply-1" if="{{$item.data.content.length > 1}}">{{getPreview($item.data.content[1])}}</text>
                    <text class="reply-1" if="{{$item.data.content.length > 2}}">{{getPreview($item.data.content[2])}}</text>
                    <div style="background-color: #fff;width:100%;height:1px"></div>
                    <text class="reply-1">查看{{$item.data.content.length}}条转发消息</text>
                </div>
                <text elif="{{$item.type !== 'reply'}}">[该消息暂不支持显示]</text>
            </div>
        </div>
        </div>
        <text else style="width: 100%;text-align: center;" class='reply-1'><span style="color:#4D7CFF">{{msg.sender.nickname}}</span>撤回了一条消息</text>
    </div>
</template>

<script>
export default {
    props: ["msg"],
    data:{
      reply_name:null,
      reply_msg:null,
      reply_time:null,
    },
    async onInit() {
      if(this.msg.message[0].type === 'reply'){
        const reply = (await global.qq.Message.getMessage(this.msg.message[0].data.id)).data
        this.reply_name = reply.sender.nickname
        this.reply_msg = global.qq.Message.getMessagesPreview(reply.message)
        this.reply_time = this.$app.$def.getTimestampStr(reply.time)
      }
    },
    getPreview(msg) {
      return `${msg.sender.nickname}:${global.qq.Message.getMessagesPreview(msg.message)}`
    },
    isSelf() {
        return this.msg.self_id === this.msg.user_id;
    },
    shouldShowRoleBar(role) {
        if (role) {
            if (role === "owner" || role === "admin") {
                return true;
            }
        }

        return false;
    },
    getSenderRoleBarBgColor(role) {
        return role === "owner" ? "rgba(255, 178, 0, 0.4)" : role === "admin" ? "rgba(0, 68, 255, 0.4)" : "";
    },
    getSenderRoleBarTextColor(role) {
        return role === "owner" ? "#FFD400" : role === "admin" ? "#4D7CFF" : "white";
    },
    getSenderRoleBarText(role) {
        return role === "owner" ? "群主" : role === "admin" ? "管理员" : "成员";
    }
}
</script>

<style lang="less">
@import "@less/global.less";

.base {
    margin-top: 10px;
    width: 400px;
    flex-direction: column;
}
.reply-box {
    width: 100%;
    padding: 10px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    flex-direction: column;
    margin-bottom: 10px;
}
.reply-1 {
    font-size: 24px;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.6);
    lines:1;
    text-overflow: ellipsis;
}
.reply-msg {
    font-size: 24px;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.9);
}
.message {
    max-width: 400px;
    flex-direction: column;
    align-items: flex-start;
}

.self-message {
  align-items: flex-end;
}

.sender-info {
    margin-left: 12px;
    width: 100%;
    flex-direction: row;
    align-items: center;
}

.sender-bar-text {
    font-size: 20px;
    font-weight: 500;
    text-overflow: ellipsis;
}

.sender-nickname {
    margin-left: 6px;
    font-size: 24px;
    color: rgba(255, 255, 255, 0.6);
    lines: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    min-width: 0;
}

.sender-rolebar {
    flex-shrink: 0;
    padding: 2px 10px;
    border-radius: 121px;
}

.box {
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    padding: 16px;
    background-color: #262626;
    border-radius: 36px;
    margin-top: 6px;
}

.self-ver {
    justify-content: flex-end;
}

.self-nickname {
    margin-left: 0px;
    margin-right: 6px;
}

.self-rolebar {
    flex-shrink: 0;
    margin-left: 0px;
    margin-right: 12px;
}

.self-box {
    background-color: #0099FF;
}
</style>