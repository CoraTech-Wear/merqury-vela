<template>
  <div class="time-comp" style="{{compStyle}}">
    <div if="{{!useRectTime}}">
      <div class="circle-time">
        <text class="timetxt">{{ hourHigh }}</text>
        <text class="timetxt">{{ hourLow }}</text>
        <text class="timetxt">:</text>
        <text class="timetxt">{{ minuteHigh }}</text>
        <text class="timetxt">{{ minuteLow }}</text>
      </div>
    </div>
    <div if="{{useRectTime}}" class="rect">
      <text class="timetxt rect-txt">{{ hourHigh }}{{ hourLow }}:{{ minuteHigh }}{{ minuteLow }}</text>
    </div>
  </div>
</template>

<script>
export default {
  data: {
    hourHigh: "",
    hourLow: "",
    minuteHigh: "",
    minuteLow: "",
    compStyle: {},
    useRectTime: false
  },
  UpdateTime() {
    const hour = this.$app.$def.dayjs().hour()
    const minute = this.$app.$def.dayjs().minute()

    this.hourHigh = Math.floor(hour / 10).toString()
    this.hourLow = (hour % 10).toString()

    this.minuteHigh = Math.floor(minute / 10).toString()
    this.minuteLow = (minute % 10).toString()
  },
  onInit() {
    this.UpdateTime()

    setInterval(() => {
      this.UpdateTime()
    }, 2000)

    const deviceInfo = global.DEVICE_INFO
    if (deviceInfo.screenShape == "rect") {
      this.compStyle["top"] = "0px"
      this.compStyle["right"] = "100px"
      this.useRectTime = true
    }
  }
}
</script>

<style lang="less">
@import "@less/global.less";

.time-comp {
  flex-direction: row;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 3.5px;
}

.circle-time {
  justify-content: flex-start;
}

.timetxt {
  font-size: 25px;
  font-weight: 600;
  top: 2px;
}

.rect-txt {
  font-size: 30px;
  padding: 0px;
}
</style>